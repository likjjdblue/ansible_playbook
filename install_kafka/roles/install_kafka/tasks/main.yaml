- name: "获取当前GROUP 名"
  run_once: true
  set_fact:
      currentGroupName: "{{ hostvars[item].group_names[0] }}"
  loop: "{{ ansible_play_batch }}"
- name: "打印组名"
  run_once: true
  debug:
    msg: "当前 group name 是： {{ currentGroupName }}"

- name: "上传镜像文件至目标服务器"
  copy:
    src:  "{{ item }}"
    dest: /tmp
  with_items:
    - kafka.5.1.0.1.tar.gz
    - zookeeper.tar.gz

- name: "导入镜像"
  shell: "docker image load -i {{ item }}"
  args:
    chdir: /tmp
  with_items:
    - kafka.5.1.0.1.tar.gz
    - zookeeper.tar.gz

- name: "创建项目目录"
  file:
    path: "/TRS/{{ item }}"
    state: directory
  with_items:
    - docker_kafka/zkdata
    - docker_kafka/zklog
    - docker_kafka/zksecrets
    - docker_kafka/kafkadata
    - docker_kafka/kafkasecrets
    - docker_kafka/kafkalogs
    - docker_kafka/kafkaGClogs

- name: "获取zookeeper 节点信息"
  run_once: true
  set_fact:
    tmp_list: "{{ groups[currentGroupName] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list  }}"

- name: "合成zookeeper节点信息"
  run_once: true
  set_fact:
    zookeeper_nodes: "{{ tmp_list | map('regex_replace', '(.*)', '\\1:2888:3888') | join(';') }}"


- name: '生成zookeeper docker-compose'
  template:
    src: docker-compose-zookeeper.yaml.j2
    dest: /TRS/docker_kafka/docker-compose-zookeeper.yaml

  with_indexed_items: "{{ groups[currentGroupName] }}"
  loop_control:
     loop_var: node_id
  when: inventory_hostname == groups[currentGroupName][node_id.0]




- name: "获取kafka 节点信息"
  run_once: true
  set_fact:
    tmp_list: "{{ groups[currentGroupName] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list  }}"



- name: "合成kafka节点信息"
  run_once: true
  set_fact:
    kafka_nodes: "{{ tmp_list | map('regex_replace', '(.*)', '\\1:2181') | join(';') }}"


- name: '生成kafka docker-compose'
  template:
    src: docker-compose-kafka.yaml.j2
    dest: /TRS/docker_kafka/docker-compose-kafka.yaml
    
  with_indexed_items: "{{ groups[currentGroupName] }}"
  loop_control:
     loop_var: node_id
  when: inventory_hostname == groups[currentGroupName][node_id.0]

- debug:
    msg: "{{ inventory_hostname }} 节点成功安装kafka"
